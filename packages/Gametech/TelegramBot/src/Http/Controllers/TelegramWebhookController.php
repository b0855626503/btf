<?php

namespace Gametech\TelegramBot\Http\Controllers;

use App\Http\Controllers\Controller;
use Gametech\TelegramBot\Console\Commands\BroadcastCommand;
use Gametech\TelegramBot\Console\Commands\RegisterCommand;
use Gametech\TelegramBot\Console\Commands\StartCommand;
use Gametech\TelegramBot\Console\Commands\WelcomeCommand;
use Gametech\TelegramBot\Models\BroadcastSessionProxy as BroadcastSession;
use Gametech\TelegramBot\Models\TelegramAdminProxy;
use Gametech\TelegramBot\Models\TelegramConfigProxy;
use Gametech\TelegramBot\Models\TelegramWelcomeMessageProxy;
use Illuminate\Http\Request;
use Telegram\Bot\Api;

class TelegramWebhookController extends Controller
{
    public function handle(Request $request)
    {
        $config = TelegramConfigProxy::first();
        if (! $config || empty($config->bot_token)) {
            return response()->json(['ok' => false, 'error' => 'Token not found'], 400);
        }
        $token = $config->bot_token;
        $telegram = new Api($token);

        $telegram->addCommands([
            StartCommand::class,
            RegisterCommand::class,
            BroadcastCommand::class,
            WelcomeCommand::class,
        ]);

        $update = $telegram->commandsHandler(true);

        // ---------- ‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö callback_query ‡∏´‡∏•‡∏≤‡∏¢‡πÅ‡∏ö‡∏ö ----------
        if (isset($update['callback_query'])) {
            $callback = $update['callback_query'];
            $chatId = $callback['message']['chat']['id'];
            $userId = $callback['from']['id'];
            $data = $callback['data']; // callback_data ‡∏à‡∏≤‡∏Å‡∏õ‡∏∏‡πà‡∏°

            // 1. ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå admin
            $isAdmin = TelegramAdminProxy::where('user_id', $userId)->exists();

            switch ($data) {
                // ----- ADMIN MENU -----
                case 'broadcast':
                    if ($isAdmin) {
                        // ‡∏™‡∏£‡πâ‡∏≤‡∏á session (‡∏´‡∏£‡∏∑‡∏≠ update ‡∏ñ‡πâ‡∏≤‡∏°‡∏µ)
                        BroadcastSession::updateOrCreate(['user_id' => $userId]);
                        // ‡πÅ‡∏à‡πâ‡∏á admin ‡πÉ‡∏´‡πâ‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ó‡∏µ‡πà‡∏à‡∏∞‡∏õ‡∏£‡∏∞‡∏Å‡∏≤‡∏®
                        $telegram->sendMessage([
                            'chat_id' => $userId,
                            'text' => "‡πÇ‡∏õ‡∏£‡∏î‡∏û‡∏¥‡∏°‡∏û‡πå‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏° ‡∏´‡∏£‡∏∑‡∏≠‡∏™‡πà‡∏á‡∏£‡∏π‡∏õ/‡πÑ‡∏ü‡∏•‡πå‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏õ‡∏£‡∏∞‡∏Å‡∏≤‡∏®\n(‡∏Ñ‡∏∏‡∏ì‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÅ‡∏ô‡∏ö‡∏•‡∏¥‡∏á‡∏Å‡πå‡πÑ‡∏î‡πâ‡∏î‡πâ‡∏ß‡∏¢ ‡πÄ‡∏ä‡πà‡∏ô '‡∏•‡∏¥‡∏á‡∏Å‡πå: https://...')",
                        ]);
                        return response()->json(['ok' => true]);
                    }
                    // ‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πà admin ‡∏´‡πâ‡∏≤‡∏°‡πÉ‡∏ä‡πâ
                    $telegram->sendMessage([
                        'chat_id' => $userId,
                        'text' => $userId.'‚ùå ‡∏Ñ‡∏∏‡∏ì‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡πÉ‡∏ä‡πâ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ô‡∏µ‡πâ ‡∏Ç‡∏≠‡∏≠‡∏†‡∏±‡∏¢ '.$isAdmin,
                    ]);
                    return response()->json(['ok' => true]);
                    break;

                case 'welcome':
                    if ($isAdmin) {
                        BroadcastSession::updateOrCreate(['user_id' => $userId]);
                        $telegram->sendMessage([
                            'chat_id' => $userId,
                            'text' => "‡πÇ‡∏õ‡∏£‡∏î‡∏û‡∏¥‡∏°‡∏û‡πå‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏° ‡∏´‡∏£‡∏∑‡∏≠‡∏™‡πà‡∏á‡∏£‡∏π‡∏õ/‡πÑ‡∏ü‡∏•‡πå‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡πâ‡∏á‡πÄ‡∏õ‡πá‡∏ô‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ï‡πâ‡∏≠‡∏ô‡∏£‡∏±‡∏ö\n(‡∏Ñ‡∏∏‡∏ì‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÅ‡∏ô‡∏ö‡∏•‡∏¥‡∏á‡∏Å‡πå‡πÑ‡∏î‡πâ‡∏î‡πâ‡∏ß‡∏¢ ‡πÄ‡∏ä‡πà‡∏ô '‡∏•‡∏¥‡∏á‡∏Å‡πå: https://...')",
                        ]);
                        return response()->json(['ok' => true]);
                    }
                    $telegram->sendMessage([
                        'chat_id' => $userId,
                        'text' => $userId.'‚ùå ‡∏Ñ‡∏∏‡∏ì‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡πÉ‡∏ä‡πâ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ô‡∏µ‡πâ ‡∏Ç‡∏≠‡∏≠‡∏†‡∏±‡∏¢ '.$isAdmin,
                    ]);
                    return response()->json(['ok' => true]);
                    break;

                // ----- CLIENT MENU -----
                case 'client_website':
                    $telegram->sendMessage([
                        'chat_id' => $userId,
                        'text' => '‡∏Å‡∏î‡∏•‡∏¥‡∏á‡∏Å‡πå‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡πÄ‡∏ß‡πá‡∏ö‡πÑ‡∏ã‡∏ï‡πå: https://yourwebsite.com',
                    ]);
                    return response()->json(['ok' => true]);
                    break;

                case 'client_register':
                    $telegram->sendMessage([
                        'chat_id' => $userId,
                        'text' => '‡∏•‡∏á‡∏ó‡∏∞‡πÄ‡∏ö‡∏µ‡∏¢‡∏ô‡πÑ‡∏î‡πâ‡∏ó‡∏µ‡πà‡∏ô‡∏µ‡πà: https://yourwebsite.com/register',
                    ]);
                    return response()->json(['ok' => true]);
                    break;

                // ----- ‡πÄ‡∏û‡∏¥‡πà‡∏° callback ‡∏Å‡∏£‡∏ì‡∏µ‡∏≠‡∏∑‡πà‡∏ô ‡πÜ ‡πÑ‡∏î‡πâ‡∏ó‡∏µ‡πà‡∏ô‡∏µ‡πà -----
                case 'client_help':
                    $telegram->sendMessage([
                        'chat_id' => $userId,
                        'text' => '‡∏™‡∏≠‡∏ö‡∏ñ‡∏≤‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏° ‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠ admin',
                    ]);
                    return response()->json(['ok' => true]);
                    break;

                default:
                    $telegram->sendMessage([
                        'chat_id' => $userId,
                        'text' => '‚ùì ‡πÄ‡∏°‡∏ô‡∏π‡πÑ‡∏°‡πà‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö‡∏´‡∏£‡∏∑‡∏≠‡∏´‡∏°‡∏î‡∏≠‡∏≤‡∏¢‡∏∏ ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏•‡∏≠‡∏á‡πÉ‡∏´‡∏°‡πà',
                    ]);
                    return response()->json(['ok' => true]);
                    break;
            }
        }

        // ------- ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ò‡∏£‡∏£‡∏°‡∏î‡∏≤‡∏´‡∏£‡∏∑‡∏≠ command (message) ------
        if (isset($update['message'])) {
            $message = $update['message'];
            $userId = $message['from']['id'];

            // === 1. ‡πÄ‡∏ä‡πá‡∏Å‡∏ß‡πà‡∏≤‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô session broadcast ‡∏´‡∏£‡∏∑‡∏≠ welcome ‡πÑ‡∏´‡∏° ===
            if (BroadcastSession::where('user_id', $userId)->exists()) {
                // --- ‡∏™‡∏°‡∏°‡∏∏‡∏ï‡∏¥‡πÉ‡∏´‡πâ‡πÅ‡∏¢‡∏Å‡∏à‡∏≤‡∏Å‡∏Å‡∏±‡∏ô‡∏î‡πâ‡∏ß‡∏¢‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏° ---
                // (‡∏à‡∏£‡∏¥‡∏á‡πÜ ‡∏≠‡∏≤‡∏à‡πÅ‡∏¢‡∏Å‡∏î‡πâ‡∏ß‡∏¢ session_type ‡∏Å‡πá‡πÑ‡∏î‡πâ)
                if ($this->isWelcomeSession($userId)) {
                    $this->handleWelcomeMessage($telegram, $config, $message, $userId);
                } else {
                    $this->handleBroadcastSession($telegram, $config, $message, $userId);
                }
                return response()->json(['ok' => true]);
            }
        }

        return response()->json(['ok' => true]);
    }

    protected function handleBroadcastSession(Api $telegram, $config, $message, $userId)
    {
        $caption = '';
        $link = '';

        $text = $message['text'] ?? '';
        // ‡∏ñ‡∏≠‡∏î link ‡∏ñ‡πâ‡∏≤‡∏°‡∏µ
//        if (preg_match('/^(.*)(‡∏•‡∏¥‡∏á‡∏Å‡πå:|link:)\s*(https?:\/\/[^\s]+)$/imu', $text, $matches)) {
//            $caption = trim($matches[1]);
//            $link = trim($matches[3]);
//        } else {
//            $caption = $text;
//        }
        $caption = $text;

        $announce = $caption;
        if ($link) {
            $announce .= "\n\nüîó <a href=\"{$link}\">{$link}</a>";
        }

        $sent = false;
        if (! empty($message['photo'])) {
            $photo = end($message['photo']);
            $fileId = $photo['file_id'];
            $telegram->sendPhoto([
                'chat_id' => $config->channel_chat_id,
                'photo' => $fileId,
                'caption' => $announce,
            ]);
            $sent = true;
        } elseif (! empty($message['document'])) {
            $fileId = $message['document']['file_id'];
            $telegram->sendDocument([
                'chat_id' => $config->channel_chat_id,
                'document' => $fileId,
                'caption' => $announce,
            ]);
            $sent = true;
        } elseif (! empty($message['animation'])) {
            $fileId = $message['animation']['file_id'];
            $telegram->sendAnimation([
                'chat_id' => $config->channel_chat_id,
                'animation' => $fileId,
                'caption' => $announce,
            ]);
            $sent = true;
        } elseif (! empty($announce)) {
            $telegram->sendMessage([
                'chat_id' => $config->channel_chat_id,
                'text' => $announce,
            ]);
            $sent = true;
        }

        // ‡πÅ‡∏à‡πâ‡∏á‡∏Å‡∏•‡∏±‡∏ö
        if ($sent) {
            $telegram->sendMessage([
                'chat_id' => $userId,
                'text' => '‚úÖ ‡∏õ‡∏£‡∏∞‡∏Å‡∏≤‡∏®‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢',
            ]);
        } else {
            $telegram->sendMessage([
                'chat_id' => $userId,
                'text' => '‚ùóÔ∏è‡∏õ‡∏£‡∏∞‡∏Å‡∏≤‡∏®‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏´‡∏£‡∏∑‡∏≠‡∏£‡∏π‡∏õ/‡πÑ‡∏ü‡∏•‡πå‡πÉ‡∏´‡∏°‡πà',
            ]);
        }

        // clear session
        BroadcastSession::where('user_id', $userId)->delete();
    }

    protected function handleWelcomeMessage(Api $telegram, $config, $message, $userId)
    {
        $caption = '';
        $link = '';
        $fileId = null;
        $mediaType = null;
        $text = $message['text'] ?? '';

        // ‡∏ñ‡∏≠‡∏î link ‡∏ñ‡πâ‡∏≤‡∏°‡∏µ
        if (preg_match('/^(.*)(‡∏•‡∏¥‡∏á‡∏Å‡πå:|link:)\s*(https?:\/\/[^\s]+)$/imu', $text, $matches)) {
            $caption = trim($matches[1]);
            $link = trim($matches[3]);
        } else {
            $caption = $text;
        }

        $announce = $caption;
        if ($link) {
            $announce .= "\n\nüîó <a href=\"{$link}\">{$link}</a>";
        }

        if (! empty($message['photo'])) {
            $photo = end($message['photo']);
            $fileId = $photo['file_id'];
            $mediaType = 'photo';
        } elseif (! empty($message['document'])) {
            $fileId = $message['document']['file_id'];
            $mediaType = 'document';
        } elseif (! empty($message['animation'])) {
            $fileId = $message['animation']['file_id'];
            $mediaType = 'animation';
        } else {
            $fileId = null;
            $mediaType = null;
        }

        // ‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡∏Å‡∏≤‡∏£‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡πÄ‡∏õ‡∏•‡πà‡∏≤
        if (empty($caption) && empty($fileId)) {
            $telegram->sendMessage([
                'chat_id' => $userId,
                'text' => '‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏° ‡∏´‡∏£‡∏∑‡∏≠ ‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û/‡πÑ‡∏ü‡∏•‡πå ‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏ô‡πâ‡∏≠‡∏¢ 1 ‡∏≠‡∏¢‡πà‡∏≤‡∏á ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ï‡πâ‡∏≠‡∏ô‡∏£‡∏±‡∏ö',
            ]);

            return;
        }

        $response = TelegramWelcomeMessageProxy::updateOrCreate(['id' => 1],
            [
                'message' => $caption,
                'media_url' => $fileId,   // ‡∏™‡πà‡∏á path/media id ‡∏ó‡∏µ‡πà‡πÄ‡∏Å‡πá‡∏ö‡πÑ‡∏ß‡πâ
                'media_type' => $mediaType,  // photo/video/animation/document
                'lang' => 'th',        // ‡∏ñ‡πâ‡∏≤‡∏°‡∏µ multi-lang ‡∏´‡∏£‡∏∑‡∏≠ 'th' default
            ]);

        if ($response) {
            $telegram->sendMessage([
                'chat_id' => $userId,
                'text' => '‚úÖ ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å ‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ï‡πâ‡∏≠‡∏ô‡∏£‡∏±‡∏ö ‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß',
            ]);
        }

        // clear session
        BroadcastSession::where('user_id', $userId)->delete();
    }

    // ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏ô‡∏µ‡πâ‡∏ñ‡πâ‡∏≤‡∏≠‡∏¢‡∏≤‡∏Å‡πÅ‡∏¢‡∏Å session ‡∏£‡∏∞‡∏´‡∏ß‡πà‡∏≤‡∏á broadcast ‡∏Å‡∏±‡∏ö welcome
    protected function isWelcomeSession($userId)
    {
        // ‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á‡πÅ‡∏ö‡∏ö basic:
        // return true ‡∏ñ‡πâ‡∏≤ session ‡∏ñ‡∏π‡∏Å‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏à‡∏≤‡∏Å‡∏õ‡∏∏‡πà‡∏° welcome
        // return false ‡∏ñ‡πâ‡∏≤‡∏à‡∏≤‡∏Å‡∏õ‡∏∏‡πà‡∏° broadcast
        // (‡∏ñ‡πâ‡∏≤‡∏≠‡∏¢‡∏≤‡∏Å‡πÅ‡∏¢‡∏Å‡∏à‡∏£‡∏¥‡∏á‡πÜ ‡πÉ‡∏´‡πâ‡πÄ‡∏û‡∏¥‡πà‡∏° field type ‡∏•‡∏á‡πÉ‡∏ô BroadcastSessionProxy)
        return false;
    }
}
